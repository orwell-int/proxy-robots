// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages/robot.proto

package orwell.messages;

public final class Robot {
  private Robot() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code orwell.messages.Status}
   */
  public enum Status
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>ON = 1;</code>
     */
    ON(0, 1),
    /**
     * <code>OFF = 2;</code>
     */
    OFF(1, 2),
    ;

    /**
     * <code>ON = 1;</code>
     */
    public static final int ON_VALUE = 1;
    /**
     * <code>OFF = 2;</code>
     */
    public static final int OFF_VALUE = 2;


    public final int getNumber() { return value; }

    public static Status valueOf(int value) {
      switch (value) {
        case 1: return ON;
        case 2: return OFF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Status>() {
            public Status findValueByNumber(int number) {
              return Status.valueOf(number);
            }
          };

    private final int value;

    private Status(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:orwell.messages.Status)
  }

  public interface ServerRobotStateOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .orwell.messages.Colour colour = 1;
    /**
     * <code>repeated .orwell.messages.Colour colour = 1;</code>
     */
    java.util.List<orwell.messages.Robot.Colour> 
        getColourList();
    /**
     * <code>repeated .orwell.messages.Colour colour = 1;</code>
     */
    orwell.messages.Robot.Colour getColour(int index);
    /**
     * <code>repeated .orwell.messages.Colour colour = 1;</code>
     */
    int getColourCount();

    // repeated .orwell.messages.Rfid rfid = 2;
    /**
     * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
     */
    java.util.List<orwell.messages.Robot.Rfid> 
        getRfidList();
    /**
     * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
     */
    orwell.messages.Robot.Rfid getRfid(int index);
    /**
     * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
     */
    int getRfidCount();
  }
  /**
   * Protobuf type {@code orwell.messages.ServerRobotState}
   *
   * <pre>
   * Notify the state the robot is in (sent while playing)
   * </pre>
   */
  public static final class ServerRobotState extends
      com.google.protobuf.GeneratedMessageLite
      implements ServerRobotStateOrBuilder {
    // Use ServerRobotState.newBuilder() to construct.
    private ServerRobotState(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private ServerRobotState(boolean noInit) {}

    private static final ServerRobotState defaultInstance;
    public static ServerRobotState getDefaultInstance() {
      return defaultInstance;
    }

    public ServerRobotState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private ServerRobotState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                colour_ = new java.util.ArrayList<orwell.messages.Robot.Colour>();
                mutable_bitField0_ |= 0x00000001;
              }
              colour_.add(input.readMessage(orwell.messages.Robot.Colour.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                rfid_ = new java.util.ArrayList<orwell.messages.Robot.Rfid>();
                mutable_bitField0_ |= 0x00000002;
              }
              rfid_.add(input.readMessage(orwell.messages.Robot.Rfid.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          colour_ = java.util.Collections.unmodifiableList(colour_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          rfid_ = java.util.Collections.unmodifiableList(rfid_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<ServerRobotState> PARSER =
        new com.google.protobuf.AbstractParser<ServerRobotState>() {
      public ServerRobotState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ServerRobotState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ServerRobotState> getParserForType() {
      return PARSER;
    }

    // repeated .orwell.messages.Colour colour = 1;
    public static final int COLOUR_FIELD_NUMBER = 1;
    private java.util.List<orwell.messages.Robot.Colour> colour_;
    /**
     * <code>repeated .orwell.messages.Colour colour = 1;</code>
     */
    public java.util.List<orwell.messages.Robot.Colour> getColourList() {
      return colour_;
    }
    /**
     * <code>repeated .orwell.messages.Colour colour = 1;</code>
     */
    public java.util.List<? extends orwell.messages.Robot.ColourOrBuilder> 
        getColourOrBuilderList() {
      return colour_;
    }
    /**
     * <code>repeated .orwell.messages.Colour colour = 1;</code>
     */
    public int getColourCount() {
      return colour_.size();
    }
    /**
     * <code>repeated .orwell.messages.Colour colour = 1;</code>
     */
    public orwell.messages.Robot.Colour getColour(int index) {
      return colour_.get(index);
    }
    /**
     * <code>repeated .orwell.messages.Colour colour = 1;</code>
     */
    public orwell.messages.Robot.ColourOrBuilder getColourOrBuilder(
        int index) {
      return colour_.get(index);
    }

    // repeated .orwell.messages.Rfid rfid = 2;
    public static final int RFID_FIELD_NUMBER = 2;
    private java.util.List<orwell.messages.Robot.Rfid> rfid_;
    /**
     * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
     */
    public java.util.List<orwell.messages.Robot.Rfid> getRfidList() {
      return rfid_;
    }
    /**
     * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
     */
    public java.util.List<? extends orwell.messages.Robot.RfidOrBuilder> 
        getRfidOrBuilderList() {
      return rfid_;
    }
    /**
     * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
     */
    public int getRfidCount() {
      return rfid_.size();
    }
    /**
     * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
     */
    public orwell.messages.Robot.Rfid getRfid(int index) {
      return rfid_.get(index);
    }
    /**
     * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
     */
    public orwell.messages.Robot.RfidOrBuilder getRfidOrBuilder(
        int index) {
      return rfid_.get(index);
    }

    private void initFields() {
      colour_ = java.util.Collections.emptyList();
      rfid_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getColourCount(); i++) {
        if (!getColour(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getRfidCount(); i++) {
        if (!getRfid(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < colour_.size(); i++) {
        output.writeMessage(1, colour_.get(i));
      }
      for (int i = 0; i < rfid_.size(); i++) {
        output.writeMessage(2, rfid_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < colour_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, colour_.get(i));
      }
      for (int i = 0; i < rfid_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, rfid_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static orwell.messages.Robot.ServerRobotState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static orwell.messages.Robot.ServerRobotState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static orwell.messages.Robot.ServerRobotState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static orwell.messages.Robot.ServerRobotState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static orwell.messages.Robot.ServerRobotState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static orwell.messages.Robot.ServerRobotState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static orwell.messages.Robot.ServerRobotState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static orwell.messages.Robot.ServerRobotState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static orwell.messages.Robot.ServerRobotState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static orwell.messages.Robot.ServerRobotState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(orwell.messages.Robot.ServerRobotState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code orwell.messages.ServerRobotState}
     *
     * <pre>
     * Notify the state the robot is in (sent while playing)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          orwell.messages.Robot.ServerRobotState, Builder>
        implements orwell.messages.Robot.ServerRobotStateOrBuilder {
      // Construct using orwell.messages.Robot.ServerRobotState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        colour_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        rfid_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public orwell.messages.Robot.ServerRobotState getDefaultInstanceForType() {
        return orwell.messages.Robot.ServerRobotState.getDefaultInstance();
      }

      public orwell.messages.Robot.ServerRobotState build() {
        orwell.messages.Robot.ServerRobotState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public orwell.messages.Robot.ServerRobotState buildPartial() {
        orwell.messages.Robot.ServerRobotState result = new orwell.messages.Robot.ServerRobotState(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          colour_ = java.util.Collections.unmodifiableList(colour_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.colour_ = colour_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          rfid_ = java.util.Collections.unmodifiableList(rfid_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.rfid_ = rfid_;
        return result;
      }

      public Builder mergeFrom(orwell.messages.Robot.ServerRobotState other) {
        if (other == orwell.messages.Robot.ServerRobotState.getDefaultInstance()) return this;
        if (!other.colour_.isEmpty()) {
          if (colour_.isEmpty()) {
            colour_ = other.colour_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureColourIsMutable();
            colour_.addAll(other.colour_);
          }
          
        }
        if (!other.rfid_.isEmpty()) {
          if (rfid_.isEmpty()) {
            rfid_ = other.rfid_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRfidIsMutable();
            rfid_.addAll(other.rfid_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getColourCount(); i++) {
          if (!getColour(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getRfidCount(); i++) {
          if (!getRfid(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        orwell.messages.Robot.ServerRobotState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (orwell.messages.Robot.ServerRobotState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .orwell.messages.Colour colour = 1;
      private java.util.List<orwell.messages.Robot.Colour> colour_ =
        java.util.Collections.emptyList();
      private void ensureColourIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          colour_ = new java.util.ArrayList<orwell.messages.Robot.Colour>(colour_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .orwell.messages.Colour colour = 1;</code>
       */
      public java.util.List<orwell.messages.Robot.Colour> getColourList() {
        return java.util.Collections.unmodifiableList(colour_);
      }
      /**
       * <code>repeated .orwell.messages.Colour colour = 1;</code>
       */
      public int getColourCount() {
        return colour_.size();
      }
      /**
       * <code>repeated .orwell.messages.Colour colour = 1;</code>
       */
      public orwell.messages.Robot.Colour getColour(int index) {
        return colour_.get(index);
      }
      /**
       * <code>repeated .orwell.messages.Colour colour = 1;</code>
       */
      public Builder setColour(
          int index, orwell.messages.Robot.Colour value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColourIsMutable();
        colour_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .orwell.messages.Colour colour = 1;</code>
       */
      public Builder setColour(
          int index, orwell.messages.Robot.Colour.Builder builderForValue) {
        ensureColourIsMutable();
        colour_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .orwell.messages.Colour colour = 1;</code>
       */
      public Builder addColour(orwell.messages.Robot.Colour value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColourIsMutable();
        colour_.add(value);

        return this;
      }
      /**
       * <code>repeated .orwell.messages.Colour colour = 1;</code>
       */
      public Builder addColour(
          int index, orwell.messages.Robot.Colour value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureColourIsMutable();
        colour_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .orwell.messages.Colour colour = 1;</code>
       */
      public Builder addColour(
          orwell.messages.Robot.Colour.Builder builderForValue) {
        ensureColourIsMutable();
        colour_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .orwell.messages.Colour colour = 1;</code>
       */
      public Builder addColour(
          int index, orwell.messages.Robot.Colour.Builder builderForValue) {
        ensureColourIsMutable();
        colour_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .orwell.messages.Colour colour = 1;</code>
       */
      public Builder addAllColour(
          java.lang.Iterable<? extends orwell.messages.Robot.Colour> values) {
        ensureColourIsMutable();
        super.addAll(values, colour_);

        return this;
      }
      /**
       * <code>repeated .orwell.messages.Colour colour = 1;</code>
       */
      public Builder clearColour() {
        colour_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .orwell.messages.Colour colour = 1;</code>
       */
      public Builder removeColour(int index) {
        ensureColourIsMutable();
        colour_.remove(index);

        return this;
      }

      // repeated .orwell.messages.Rfid rfid = 2;
      private java.util.List<orwell.messages.Robot.Rfid> rfid_ =
        java.util.Collections.emptyList();
      private void ensureRfidIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          rfid_ = new java.util.ArrayList<orwell.messages.Robot.Rfid>(rfid_);
          bitField0_ |= 0x00000002;
         }
      }

      /**
       * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
       */
      public java.util.List<orwell.messages.Robot.Rfid> getRfidList() {
        return java.util.Collections.unmodifiableList(rfid_);
      }
      /**
       * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
       */
      public int getRfidCount() {
        return rfid_.size();
      }
      /**
       * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
       */
      public orwell.messages.Robot.Rfid getRfid(int index) {
        return rfid_.get(index);
      }
      /**
       * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
       */
      public Builder setRfid(
          int index, orwell.messages.Robot.Rfid value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRfidIsMutable();
        rfid_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
       */
      public Builder setRfid(
          int index, orwell.messages.Robot.Rfid.Builder builderForValue) {
        ensureRfidIsMutable();
        rfid_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
       */
      public Builder addRfid(orwell.messages.Robot.Rfid value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRfidIsMutable();
        rfid_.add(value);

        return this;
      }
      /**
       * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
       */
      public Builder addRfid(
          int index, orwell.messages.Robot.Rfid value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRfidIsMutable();
        rfid_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
       */
      public Builder addRfid(
          orwell.messages.Robot.Rfid.Builder builderForValue) {
        ensureRfidIsMutable();
        rfid_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
       */
      public Builder addRfid(
          int index, orwell.messages.Robot.Rfid.Builder builderForValue) {
        ensureRfidIsMutable();
        rfid_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
       */
      public Builder addAllRfid(
          java.lang.Iterable<? extends orwell.messages.Robot.Rfid> values) {
        ensureRfidIsMutable();
        super.addAll(values, rfid_);

        return this;
      }
      /**
       * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
       */
      public Builder clearRfid() {
        rfid_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);

        return this;
      }
      /**
       * <code>repeated .orwell.messages.Rfid rfid = 2;</code>
       */
      public Builder removeRfid(int index) {
        ensureRfidIsMutable();
        rfid_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:orwell.messages.ServerRobotState)
    }

    static {
      defaultInstance = new ServerRobotState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:orwell.messages.ServerRobotState)
  }

  public interface ColourOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 timestamp = 1;
    /**
     * <code>required int64 timestamp = 1;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>required int64 timestamp = 1;</code>
     */
    long getTimestamp();

    // required .orwell.messages.Status status = 2;
    /**
     * <code>required .orwell.messages.Status status = 2;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .orwell.messages.Status status = 2;</code>
     */
    orwell.messages.Robot.Status getStatus();

    // required int32 colour = 3;
    /**
     * <code>required int32 colour = 3;</code>
     */
    boolean hasColour();
    /**
     * <code>required int32 colour = 3;</code>
     */
    int getColour();
  }
  /**
   * Protobuf type {@code orwell.messages.Colour}
   *
   * <pre>
   * Robot is detecting a Colour flag
   * </pre>
   */
  public static final class Colour extends
      com.google.protobuf.GeneratedMessageLite
      implements ColourOrBuilder {
    // Use Colour.newBuilder() to construct.
    private Colour(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Colour(boolean noInit) {}

    private static final Colour defaultInstance;
    public static Colour getDefaultInstance() {
      return defaultInstance;
    }

    public Colour getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Colour(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              orwell.messages.Robot.Status value = orwell.messages.Robot.Status.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000002;
                status_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              colour_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Colour> PARSER =
        new com.google.protobuf.AbstractParser<Colour>() {
      public Colour parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Colour(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Colour> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 timestamp = 1;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>required int64 timestamp = 1;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 timestamp = 1;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    // required .orwell.messages.Status status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private orwell.messages.Robot.Status status_;
    /**
     * <code>required .orwell.messages.Status status = 2;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .orwell.messages.Status status = 2;</code>
     */
    public orwell.messages.Robot.Status getStatus() {
      return status_;
    }

    // required int32 colour = 3;
    public static final int COLOUR_FIELD_NUMBER = 3;
    private int colour_;
    /**
     * <code>required int32 colour = 3;</code>
     */
    public boolean hasColour() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 colour = 3;</code>
     */
    public int getColour() {
      return colour_;
    }

    private void initFields() {
      timestamp_ = 0L;
      status_ = orwell.messages.Robot.Status.ON;
      colour_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColour()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, status_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, colour_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, status_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, colour_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static orwell.messages.Robot.Colour parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static orwell.messages.Robot.Colour parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static orwell.messages.Robot.Colour parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static orwell.messages.Robot.Colour parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static orwell.messages.Robot.Colour parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static orwell.messages.Robot.Colour parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static orwell.messages.Robot.Colour parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static orwell.messages.Robot.Colour parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static orwell.messages.Robot.Colour parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static orwell.messages.Robot.Colour parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(orwell.messages.Robot.Colour prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code orwell.messages.Colour}
     *
     * <pre>
     * Robot is detecting a Colour flag
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          orwell.messages.Robot.Colour, Builder>
        implements orwell.messages.Robot.ColourOrBuilder {
      // Construct using orwell.messages.Robot.Colour.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = orwell.messages.Robot.Status.ON;
        bitField0_ = (bitField0_ & ~0x00000002);
        colour_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public orwell.messages.Robot.Colour getDefaultInstanceForType() {
        return orwell.messages.Robot.Colour.getDefaultInstance();
      }

      public orwell.messages.Robot.Colour build() {
        orwell.messages.Robot.Colour result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public orwell.messages.Robot.Colour buildPartial() {
        orwell.messages.Robot.Colour result = new orwell.messages.Robot.Colour(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.colour_ = colour_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(orwell.messages.Robot.Colour other) {
        if (other == orwell.messages.Robot.Colour.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasColour()) {
          setColour(other.getColour());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimestamp()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasColour()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        orwell.messages.Robot.Colour parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (orwell.messages.Robot.Colour) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 timestamp = 1;
      private long timestamp_ ;
      /**
       * <code>required int64 timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        
        return this;
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        
        return this;
      }

      // required .orwell.messages.Status status = 2;
      private orwell.messages.Robot.Status status_ = orwell.messages.Robot.Status.ON;
      /**
       * <code>required .orwell.messages.Status status = 2;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .orwell.messages.Status status = 2;</code>
       */
      public orwell.messages.Robot.Status getStatus() {
        return status_;
      }
      /**
       * <code>required .orwell.messages.Status status = 2;</code>
       */
      public Builder setStatus(orwell.messages.Robot.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required .orwell.messages.Status status = 2;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = orwell.messages.Robot.Status.ON;
        
        return this;
      }

      // required int32 colour = 3;
      private int colour_ ;
      /**
       * <code>required int32 colour = 3;</code>
       */
      public boolean hasColour() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 colour = 3;</code>
       */
      public int getColour() {
        return colour_;
      }
      /**
       * <code>required int32 colour = 3;</code>
       */
      public Builder setColour(int value) {
        bitField0_ |= 0x00000004;
        colour_ = value;
        
        return this;
      }
      /**
       * <code>required int32 colour = 3;</code>
       */
      public Builder clearColour() {
        bitField0_ = (bitField0_ & ~0x00000004);
        colour_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:orwell.messages.Colour)
    }

    static {
      defaultInstance = new Colour(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:orwell.messages.Colour)
  }

  public interface RfidOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 timestamp = 1;
    /**
     * <code>required int64 timestamp = 1;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>required int64 timestamp = 1;</code>
     */
    long getTimestamp();

    // required .orwell.messages.Status status = 2;
    /**
     * <code>required .orwell.messages.Status status = 2;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .orwell.messages.Status status = 2;</code>
     */
    orwell.messages.Robot.Status getStatus();

    // required string rfid = 3;
    /**
     * <code>required string rfid = 3;</code>
     */
    boolean hasRfid();
    /**
     * <code>required string rfid = 3;</code>
     */
    java.lang.String getRfid();
    /**
     * <code>required string rfid = 3;</code>
     */
    com.google.protobuf.ByteString
        getRfidBytes();
  }
  /**
   * Protobuf type {@code orwell.messages.Rfid}
   *
   * <pre>
   * Robot is detecting a RFID flag
   * </pre>
   */
  public static final class Rfid extends
      com.google.protobuf.GeneratedMessageLite
      implements RfidOrBuilder {
    // Use Rfid.newBuilder() to construct.
    private Rfid(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Rfid(boolean noInit) {}

    private static final Rfid defaultInstance;
    public static Rfid getDefaultInstance() {
      return defaultInstance;
    }

    public Rfid getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Rfid(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              orwell.messages.Robot.Status value = orwell.messages.Robot.Status.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000002;
                status_ = value;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              rfid_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Rfid> PARSER =
        new com.google.protobuf.AbstractParser<Rfid>() {
      public Rfid parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Rfid(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Rfid> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 timestamp = 1;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>required int64 timestamp = 1;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 timestamp = 1;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    // required .orwell.messages.Status status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private orwell.messages.Robot.Status status_;
    /**
     * <code>required .orwell.messages.Status status = 2;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .orwell.messages.Status status = 2;</code>
     */
    public orwell.messages.Robot.Status getStatus() {
      return status_;
    }

    // required string rfid = 3;
    public static final int RFID_FIELD_NUMBER = 3;
    private java.lang.Object rfid_;
    /**
     * <code>required string rfid = 3;</code>
     */
    public boolean hasRfid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string rfid = 3;</code>
     */
    public java.lang.String getRfid() {
      java.lang.Object ref = rfid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          rfid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string rfid = 3;</code>
     */
    public com.google.protobuf.ByteString
        getRfidBytes() {
      java.lang.Object ref = rfid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rfid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      timestamp_ = 0L;
      status_ = orwell.messages.Robot.Status.ON;
      rfid_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRfid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, status_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getRfidBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, status_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getRfidBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static orwell.messages.Robot.Rfid parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static orwell.messages.Robot.Rfid parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static orwell.messages.Robot.Rfid parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static orwell.messages.Robot.Rfid parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static orwell.messages.Robot.Rfid parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static orwell.messages.Robot.Rfid parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static orwell.messages.Robot.Rfid parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static orwell.messages.Robot.Rfid parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static orwell.messages.Robot.Rfid parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static orwell.messages.Robot.Rfid parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(orwell.messages.Robot.Rfid prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code orwell.messages.Rfid}
     *
     * <pre>
     * Robot is detecting a RFID flag
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          orwell.messages.Robot.Rfid, Builder>
        implements orwell.messages.Robot.RfidOrBuilder {
      // Construct using orwell.messages.Robot.Rfid.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = orwell.messages.Robot.Status.ON;
        bitField0_ = (bitField0_ & ~0x00000002);
        rfid_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public orwell.messages.Robot.Rfid getDefaultInstanceForType() {
        return orwell.messages.Robot.Rfid.getDefaultInstance();
      }

      public orwell.messages.Robot.Rfid build() {
        orwell.messages.Robot.Rfid result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public orwell.messages.Robot.Rfid buildPartial() {
        orwell.messages.Robot.Rfid result = new orwell.messages.Robot.Rfid(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rfid_ = rfid_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(orwell.messages.Robot.Rfid other) {
        if (other == orwell.messages.Robot.Rfid.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRfid()) {
          bitField0_ |= 0x00000004;
          rfid_ = other.rfid_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimestamp()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasRfid()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        orwell.messages.Robot.Rfid parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (orwell.messages.Robot.Rfid) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 timestamp = 1;
      private long timestamp_ ;
      /**
       * <code>required int64 timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        
        return this;
      }
      /**
       * <code>required int64 timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        
        return this;
      }

      // required .orwell.messages.Status status = 2;
      private orwell.messages.Robot.Status status_ = orwell.messages.Robot.Status.ON;
      /**
       * <code>required .orwell.messages.Status status = 2;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .orwell.messages.Status status = 2;</code>
       */
      public orwell.messages.Robot.Status getStatus() {
        return status_;
      }
      /**
       * <code>required .orwell.messages.Status status = 2;</code>
       */
      public Builder setStatus(orwell.messages.Robot.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required .orwell.messages.Status status = 2;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = orwell.messages.Robot.Status.ON;
        
        return this;
      }

      // required string rfid = 3;
      private java.lang.Object rfid_ = "";
      /**
       * <code>required string rfid = 3;</code>
       */
      public boolean hasRfid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string rfid = 3;</code>
       */
      public java.lang.String getRfid() {
        java.lang.Object ref = rfid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          rfid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string rfid = 3;</code>
       */
      public com.google.protobuf.ByteString
          getRfidBytes() {
        java.lang.Object ref = rfid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rfid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string rfid = 3;</code>
       */
      public Builder setRfid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        rfid_ = value;
        
        return this;
      }
      /**
       * <code>required string rfid = 3;</code>
       */
      public Builder clearRfid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rfid_ = getDefaultInstance().getRfid();
        
        return this;
      }
      /**
       * <code>required string rfid = 3;</code>
       */
      public Builder setRfidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        rfid_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:orwell.messages.Rfid)
    }

    static {
      defaultInstance = new Rfid(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:orwell.messages.Rfid)
  }

  public interface RegisterOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string temporary_robot_id = 1;
    /**
     * <code>required string temporary_robot_id = 1;</code>
     *
     * <pre>
     * this temporary robot ID is only used when registering because
     * we do not know yet what ID the server will assign to the robot
     * </pre>
     */
    boolean hasTemporaryRobotId();
    /**
     * <code>required string temporary_robot_id = 1;</code>
     *
     * <pre>
     * this temporary robot ID is only used when registering because
     * we do not know yet what ID the server will assign to the robot
     * </pre>
     */
    java.lang.String getTemporaryRobotId();
    /**
     * <code>required string temporary_robot_id = 1;</code>
     *
     * <pre>
     * this temporary robot ID is only used when registering because
     * we do not know yet what ID the server will assign to the robot
     * </pre>
     */
    com.google.protobuf.ByteString
        getTemporaryRobotIdBytes();

    // required string video_url = 2;
    /**
     * <code>required string video_url = 2;</code>
     */
    boolean hasVideoUrl();
    /**
     * <code>required string video_url = 2;</code>
     */
    java.lang.String getVideoUrl();
    /**
     * <code>required string video_url = 2;</code>
     */
    com.google.protobuf.ByteString
        getVideoUrlBytes();

    // required string image = 3;
    /**
     * <code>required string image = 3;</code>
     */
    boolean hasImage();
    /**
     * <code>required string image = 3;</code>
     */
    java.lang.String getImage();
    /**
     * <code>required string image = 3;</code>
     */
    com.google.protobuf.ByteString
        getImageBytes();
  }
  /**
   * Protobuf type {@code orwell.messages.Register}
   *
   * <pre>
   * Ask the server to register a new robot. The video address and port
   * are provided.
   * Answered by: Registered
   * </pre>
   */
  public static final class Register extends
      com.google.protobuf.GeneratedMessageLite
      implements RegisterOrBuilder {
    // Use Register.newBuilder() to construct.
    private Register(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Register(boolean noInit) {}

    private static final Register defaultInstance;
    public static Register getDefaultInstance() {
      return defaultInstance;
    }

    public Register getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Register(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              temporaryRobotId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              videoUrl_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              image_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Register> PARSER =
        new com.google.protobuf.AbstractParser<Register>() {
      public Register parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Register(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Register> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string temporary_robot_id = 1;
    public static final int TEMPORARY_ROBOT_ID_FIELD_NUMBER = 1;
    private java.lang.Object temporaryRobotId_;
    /**
     * <code>required string temporary_robot_id = 1;</code>
     *
     * <pre>
     * this temporary robot ID is only used when registering because
     * we do not know yet what ID the server will assign to the robot
     * </pre>
     */
    public boolean hasTemporaryRobotId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string temporary_robot_id = 1;</code>
     *
     * <pre>
     * this temporary robot ID is only used when registering because
     * we do not know yet what ID the server will assign to the robot
     * </pre>
     */
    public java.lang.String getTemporaryRobotId() {
      java.lang.Object ref = temporaryRobotId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          temporaryRobotId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string temporary_robot_id = 1;</code>
     *
     * <pre>
     * this temporary robot ID is only used when registering because
     * we do not know yet what ID the server will assign to the robot
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTemporaryRobotIdBytes() {
      java.lang.Object ref = temporaryRobotId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        temporaryRobotId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string video_url = 2;
    public static final int VIDEO_URL_FIELD_NUMBER = 2;
    private java.lang.Object videoUrl_;
    /**
     * <code>required string video_url = 2;</code>
     */
    public boolean hasVideoUrl() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string video_url = 2;</code>
     */
    public java.lang.String getVideoUrl() {
      java.lang.Object ref = videoUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          videoUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string video_url = 2;</code>
     */
    public com.google.protobuf.ByteString
        getVideoUrlBytes() {
      java.lang.Object ref = videoUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        videoUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string image = 3;
    public static final int IMAGE_FIELD_NUMBER = 3;
    private java.lang.Object image_;
    /**
     * <code>required string image = 3;</code>
     */
    public boolean hasImage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string image = 3;</code>
     */
    public java.lang.String getImage() {
      java.lang.Object ref = image_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          image_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string image = 3;</code>
     */
    public com.google.protobuf.ByteString
        getImageBytes() {
      java.lang.Object ref = image_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        image_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      temporaryRobotId_ = "";
      videoUrl_ = "";
      image_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTemporaryRobotId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVideoUrl()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasImage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTemporaryRobotIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getVideoUrlBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getImageBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTemporaryRobotIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getVideoUrlBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getImageBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static orwell.messages.Robot.Register parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static orwell.messages.Robot.Register parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static orwell.messages.Robot.Register parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static orwell.messages.Robot.Register parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static orwell.messages.Robot.Register parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static orwell.messages.Robot.Register parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static orwell.messages.Robot.Register parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static orwell.messages.Robot.Register parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static orwell.messages.Robot.Register parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static orwell.messages.Robot.Register parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(orwell.messages.Robot.Register prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code orwell.messages.Register}
     *
     * <pre>
     * Ask the server to register a new robot. The video address and port
     * are provided.
     * Answered by: Registered
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          orwell.messages.Robot.Register, Builder>
        implements orwell.messages.Robot.RegisterOrBuilder {
      // Construct using orwell.messages.Robot.Register.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        temporaryRobotId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        videoUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        image_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public orwell.messages.Robot.Register getDefaultInstanceForType() {
        return orwell.messages.Robot.Register.getDefaultInstance();
      }

      public orwell.messages.Robot.Register build() {
        orwell.messages.Robot.Register result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public orwell.messages.Robot.Register buildPartial() {
        orwell.messages.Robot.Register result = new orwell.messages.Robot.Register(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.temporaryRobotId_ = temporaryRobotId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.videoUrl_ = videoUrl_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.image_ = image_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(orwell.messages.Robot.Register other) {
        if (other == orwell.messages.Robot.Register.getDefaultInstance()) return this;
        if (other.hasTemporaryRobotId()) {
          bitField0_ |= 0x00000001;
          temporaryRobotId_ = other.temporaryRobotId_;
          
        }
        if (other.hasVideoUrl()) {
          bitField0_ |= 0x00000002;
          videoUrl_ = other.videoUrl_;
          
        }
        if (other.hasImage()) {
          bitField0_ |= 0x00000004;
          image_ = other.image_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTemporaryRobotId()) {
          
          return false;
        }
        if (!hasVideoUrl()) {
          
          return false;
        }
        if (!hasImage()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        orwell.messages.Robot.Register parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (orwell.messages.Robot.Register) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string temporary_robot_id = 1;
      private java.lang.Object temporaryRobotId_ = "";
      /**
       * <code>required string temporary_robot_id = 1;</code>
       *
       * <pre>
       * this temporary robot ID is only used when registering because
       * we do not know yet what ID the server will assign to the robot
       * </pre>
       */
      public boolean hasTemporaryRobotId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string temporary_robot_id = 1;</code>
       *
       * <pre>
       * this temporary robot ID is only used when registering because
       * we do not know yet what ID the server will assign to the robot
       * </pre>
       */
      public java.lang.String getTemporaryRobotId() {
        java.lang.Object ref = temporaryRobotId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          temporaryRobotId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string temporary_robot_id = 1;</code>
       *
       * <pre>
       * this temporary robot ID is only used when registering because
       * we do not know yet what ID the server will assign to the robot
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTemporaryRobotIdBytes() {
        java.lang.Object ref = temporaryRobotId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          temporaryRobotId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string temporary_robot_id = 1;</code>
       *
       * <pre>
       * this temporary robot ID is only used when registering because
       * we do not know yet what ID the server will assign to the robot
       * </pre>
       */
      public Builder setTemporaryRobotId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        temporaryRobotId_ = value;
        
        return this;
      }
      /**
       * <code>required string temporary_robot_id = 1;</code>
       *
       * <pre>
       * this temporary robot ID is only used when registering because
       * we do not know yet what ID the server will assign to the robot
       * </pre>
       */
      public Builder clearTemporaryRobotId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        temporaryRobotId_ = getDefaultInstance().getTemporaryRobotId();
        
        return this;
      }
      /**
       * <code>required string temporary_robot_id = 1;</code>
       *
       * <pre>
       * this temporary robot ID is only used when registering because
       * we do not know yet what ID the server will assign to the robot
       * </pre>
       */
      public Builder setTemporaryRobotIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        temporaryRobotId_ = value;
        
        return this;
      }

      // required string video_url = 2;
      private java.lang.Object videoUrl_ = "";
      /**
       * <code>required string video_url = 2;</code>
       */
      public boolean hasVideoUrl() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string video_url = 2;</code>
       */
      public java.lang.String getVideoUrl() {
        java.lang.Object ref = videoUrl_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          videoUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string video_url = 2;</code>
       */
      public com.google.protobuf.ByteString
          getVideoUrlBytes() {
        java.lang.Object ref = videoUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          videoUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string video_url = 2;</code>
       */
      public Builder setVideoUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        videoUrl_ = value;
        
        return this;
      }
      /**
       * <code>required string video_url = 2;</code>
       */
      public Builder clearVideoUrl() {
        bitField0_ = (bitField0_ & ~0x00000002);
        videoUrl_ = getDefaultInstance().getVideoUrl();
        
        return this;
      }
      /**
       * <code>required string video_url = 2;</code>
       */
      public Builder setVideoUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        videoUrl_ = value;
        
        return this;
      }

      // required string image = 3;
      private java.lang.Object image_ = "";
      /**
       * <code>required string image = 3;</code>
       */
      public boolean hasImage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string image = 3;</code>
       */
      public java.lang.String getImage() {
        java.lang.Object ref = image_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          image_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string image = 3;</code>
       */
      public com.google.protobuf.ByteString
          getImageBytes() {
        java.lang.Object ref = image_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          image_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string image = 3;</code>
       */
      public Builder setImage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        image_ = value;
        
        return this;
      }
      /**
       * <code>required string image = 3;</code>
       */
      public Builder clearImage() {
        bitField0_ = (bitField0_ & ~0x00000004);
        image_ = getDefaultInstance().getImage();
        
        return this;
      }
      /**
       * <code>required string image = 3;</code>
       */
      public Builder setImageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        image_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:orwell.messages.Register)
    }

    static {
      defaultInstance = new Register(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:orwell.messages.Register)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
